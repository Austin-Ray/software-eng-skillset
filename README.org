* Communication
  - /[[http://matt.might.net/articles/how-to-email/][How to send and reply to email]]/ by Matt Might ([[https://web.archive.org/web/20200114035241/http://matt.might.net/articles/how-to-email/][archive link]])

* Software
** Practices
   - Test-driven Development
     - /[[https://www.goodreads.com/book/show/387190.Test_Driven_Development][Test Driven Development: By Example]]/ by Kent Beck
     - /[[https://hackernoon.com/introduction-to-test-driven-development-tdd-61a13bc92d92][Introduction to Test Driven Development (TDD)]]/ by Sylvain Saurel ([[https://web.archive.org/web/20200129033225/https://hackernoon.com/introduction-to-test-driven-development-tdd-61a13bc92d92][archive link]])
* Version Control

  A good software engineer should be proficient in a version control system. Git
  is the focus for this document.

  - /[[https://chris.beams.io/posts/git-commit/][How to Write a Git Commit Message]]/ by Chris Beams ([[https://web.archive.org/web/20200119100947/https://chris.beams.io/posts/git-commit/][archive link]])
  - /[[https://git-scm.com/book/en/v2][ProGit]]/ by Scott Chacon and Ben Straub
  - /[[https://nvie.com/posts/a-successful-git-branching-model/][A Successful Git Branching Model]]/ by Vincent Driessen ([[https://web.archive.org/web/20200117005352/https://nvie.com/posts/a-successful-git-branching-model/][archive link]])
